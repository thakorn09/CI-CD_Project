on:
  push:
    branches: 
      - master

name: Deploy to Amazon EC2

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Grant execute permission for gradlew
      run: |
          cd server
          chmod 755 ./gradlew
    - name: Gradle run test
      run: |
        cd server
          ./gradlew test
        cd ..
      env:
        CI: true
        
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: cicdproject
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # Build a docker container and
        # push it to ECR so that it can
        # be deployed to ECS.
        cd server
        chmod 755 ./Dockerfile
        chmod 755 ./docker-compose.yml
        docker-compose -f docker-compose.yml build
        docker-compose -f docker-compose.yml push
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

    - name: allow permission pem file
      run: |
        cd .aws
        chmod 400 CiCdkey.pem  
  
    - name: deploy to ec2
      uses: appleboy/ssh-action@master
      env: 
        SHA: ${{ github.sha }}
      with:
        host: ${{ secrets.HOST }}
        username: ubuntu
        port: 22
        key_path: .aws/CiCdkey.pem
        envs: SHA
        script: |
            whoami
            docker images 
            echo "sha: $SHA"
            export IMAGE_TAG="$SHA"
            $sudo $(aws ecr get-login --no-include-email --region ap-southeast-1)
            docker-compose -f docker-compose.yml down
            docker-compose rm -f
            docker-compose -f docker-compose.yml pull
            docker images
            docker-compose -f docker-compose.yml up -d
            docker ps
            
    
